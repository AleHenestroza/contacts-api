plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'checkstyle'
}

group = 'com.tiendanube'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Validation
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Dev Utils
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:testcontainers:1.19.8"
    testImplementation "org.testcontainers:junit-jupiter:1.19.8"
    testImplementation "org.testcontainers:mongodb:1.19.8"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

checkstyle {
    toolVersion = '10.17.0'
}

tasks.withType(Checkstyle).configureEach {
    ignoreFailures = true // Do not fail the build on Checkstyle errors
}

// Custom checkstyle task to run only on the source code and fail for CI workflows
tasks.register('runCheckstyle', Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    classpath = sourceSets.main.compileClasspath
    ignoreFailures = false
}

jar {
    enabled = true
    archiveBaseName = 'app'
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.upToDateWhen { false } // Always run tests without caching
}
